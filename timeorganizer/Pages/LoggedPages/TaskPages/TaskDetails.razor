@page "/subtask"
@using timeorganizer.Services
@using timeorganizer.Helpers
<h1>Szczaegóły</h1>

@inject NavigationManager NavigationManager
@inject ToDoService taskService
<button class="btn btn-primary mt-3" @onclick="@MoveToAddTC">Dodaj Etapy Zadania</button>
<button class="btn btn-primary mt-3" @onclick="@(e => MoveToEdit(@taskService.AddSTask.Zadanie.Id, 0))">Edytuj zadanie</button>
<button class="btn btn-primary mt-3" @onclick="@Powroc">Powrót</button>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Type</th>
            <th>Status</th>
            <th>Termin</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@taskService.AddSTask.Zadanie.Name</td>
            <td>@taskService.AddSTask.Zadanie.Description</td>
            <td>@taskService.AddSTask.Zadanie.Type</td>
            <td>@taskService.AddSTask.Zadanie.Status</td>
            <td>@taskService.AddSTask.Zadanie.Termin</td>
         </tr>
    </tbody>
</table>
<table>
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Type</th>
            <th>Status</th>
        </tr>
    </thead>

@foreach (var subTasks in taskService.AddSTask.PodZadanie) {

    <tbody>
        <tr>
            <td>@subTasks.Name</td>
            <td>@subTasks.Description</td>
            <td>@subTasks.TaskId</td>
            <td>@subTasks.Status</td>
            <td><button class="btn btn-primary mt-3" @onclick="@(e => MoveToEdit(@subTasks.Id, 1))">Edytuj Etap</button></td>
        </tr>

    </tbody>
}
</table>


@code {
    protected override async void OnAfterRender(bool firstRender) {
        if (firstRender) {
            await taskService.AddSTask.GetTask();
            StateHasChanged();
        }
    } 
    public void MoveToAddTC() {
        NavigationManager.NavigateTo("/addtaskcom");
        StateHasChanged();
    }
    public async void MoveToEdit(int tid, int typ) {
        taskService.EditTask.typ = typ;
        await taskService.EditTask.GetTask(tid);
        NavigationManager.NavigateTo("/edittask");
        StateHasChanged();
    }
    private void Powroc() {
        NavigationManager.NavigateTo("/todo");
    }
}



