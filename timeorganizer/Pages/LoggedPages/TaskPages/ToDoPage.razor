@page "/todo"
@using timeorganizer.Services
@using timeorganizer.Helpers

<div class="container">
    <!--Przycisk do dodawania zadan-->
    <button @onclick="@(e => Przenies(0))" class="add-task-button">
            <span class="oi oi-plus" aria-hidden="true"></span>
        </button> 
@inject ToDoService taskService
@inject NavigationManager NavigationManager
   

    <h2>Twoje Zadania</h2>
        @foreach (var task in taskService.showTask.TasksCollection) {
        <div class="task-tile">
            <p class="task-title">@task.Name</p>
            <p class="task-description">@task.Description</p>
            <div class="task-details">
                <p class="task-type">Typ: @task.Type</p>
                <!--<p class="task-status">Status: @task.Status</p>-->
                <p class="task-due-date">Termin: @task.Termin</p>
                <p class="task-progress">Realizacja: @task.RealizedPercent%</p>
            </div>
        <button @onclick="@(e => RedirectToDetails(@task.Id))" class="buttondetails">Szczegóły zadania</button>
        </div>
        }

    <!--FILTROWANIE ZADAŃ-->
    <br/>

    <h2><span class="oi oi-magnifying-glass" aria-hidden="true"></span> Filtrowanie zadań</h2>

    <div class="d-flex flex-row align-items-center">
        <div class="form-group mr-2">
            <label class="form-label">Typ</label>
            <input @bind="@taskService.showTask.Typ" class="form-control" />
        </div>

        <div class="form-group mr-2">
            <label class="form-label">Status</label>
            <InputSelect @bind-Value="taskService.showTask.Status" class="form-control">
                @foreach (var status in taskService.showTask.StatusStr)
                {
                    <option value="@status">@status</option>
                }
            </InputSelect>
        </div>
        <div class="form-group mr-2">
            <label class="form-label">Data</label>
            <InputDate Type="InputDateType.Date" class="form-control" @bind-Value="taskService.showTask.TerminD"> </InputDate>
        </div>
    </div>
        <button @onclick="@filterTask" style="margin: 10px auto; display: block;">Filtruj</button> <br/>

        @code {
            private async void RedirectToDetails(int taskId) {
                taskService.AddSTask.TaskId = taskId;
                await taskService.AddSTask.GetTask();
                NavigationManager.NavigateTo("/subtask");
            }
            private void Przenies(int typ){
                NavigationManager.NavigateTo("/addtask");
            }
        }
        <a href="/" class="button">Wróć</a>

</div>
@code{
    
    protected override void OnAfterRender(bool firstRender){
        if (firstRender){
            filterTask();
            StateHasChanged();
        }
    }
    public async void filterTask() {
        await taskService.showTask.FilterTasks();
        StateHasChanged();
    }
    public async void refreshOnAddTask(){
        await taskService.addTask.AddTask();
        await taskService.showTask.FilterTasks();
        StateHasChanged();
    }
   
}