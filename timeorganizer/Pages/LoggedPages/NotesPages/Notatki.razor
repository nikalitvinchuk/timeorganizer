@page "/Notatki"
@using timeorganizer.DatabaseModels;
@using timeorganizer.Services

@inject NoteService noteService
@inject NavigationManager NavigationManager
@inject DatabaseLogin context

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Lista Notatek</h2>

            @if (noteService.ShowNotesTitle.NotesColletion != null && noteService.ShowNotesTitle.NotesColletion.Any())
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Tytuł</th>
                            <th>Treść</th>
                            <th>Data utworzenia</th>
                            <th>Akcje</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var note in noteService.ShowNotesTitle.NotesColletion)
                        {
                            <tr>
                                <td>@note.Title</td>
                                <td>@note.Content</td>
                                <td>@note.Created</td>
                                <td><button @onclick="@(e=> DeleteNote(@note.Id))">Usuń</button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>Brak notatek.</p>
            }

            <a class="btn" href="/addnotes">Dodaj nową notatkę</a>
        </div>
    </div>
</div>

@code{
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            filternote();
            StateHasChanged();
        }
    }
    private async void filternote()
    {
        await noteService.ShowNotesTitle.GetNotes();
        StateHasChanged();
    }

    private async void DeleteNote(int id)
    {
        try
        {
            await context.DeleteItemByKeyAsync<Notes>(id);
            // Aktualizacja listy notatek
            await noteService.ShowNotesTitle.GetNotes();
            StateHasChanged();// Pobiera notatki i aktualizuje NotesList
        }
        catch (Exception ex)
        {
            // Obsługa błędu
            Console.WriteLine($"Błąd podczas usuwania notatki: {ex.Message}");
        }
    }

}